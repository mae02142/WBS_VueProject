{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport GanttConfig from './GanttConfig.vue';\nimport axios from 'axios';\nexport default {\n  name: 'GanttContainer',\n  components: {\n    GanttConfig\n  },\n  props: {\n    // selectedProject: {\n    //   type: Object,      // 만약 selectedProject가 객체라면 type을 Object로 설정\n    //   default: () => ({})  // 기본값을 빈 객체로 설정. 필요에 따라 수정 가능\n    // }\n    projectList: []\n  },\n  data() {\n    return {\n      project: '',\n      tasks: {\n        data: [\n        //{id: 1, todo_title: '메일', member: 'aaa', start_date: '2023-10-14', end_date: '2023-10-15',duration: 1, progress: 0.6},\n        {\n          id: 2,\n          todo_title: '전자결재함',\n          member: 'bbb',\n          start_date: '2023-10-15',\n          end_date: '2023-10-18',\n          duration: 3,\n          progress: 0.4\n        }]\n      },\n      messages: []\n    };\n  },\n  // watch: {\n  //   // selectedProject prop의 변경을 감지\n  //   selectedProject(newProject) {\n  //     if (newProject && newProject.project_num) {\n  //       this.fetchProjectTasks(newProject.project_num);\n  //     }\n  //   }\n  // },\n  mounted() {\n    // if (this.selectedProject && this.selectedProject.project_num) {\n    //   this.fetchProjectTasks(this.selectedProject.project_num);\n    // }\n  },\n  methods: {\n    fetchProjectTasks(projectNum) {\n      // 예: axios를 사용한 API 요청\n      axios.get(`/api/getTasksForProject?projectNum=${projectNum}`).then(response => {\n        this.tasks.data = response.data.tasks || [];\n        this.tasks.links = response.data.links || [];\n      }).catch(error => {\n        console.error(\"Error fetching tasks:\", error);\n      });\n    }\n  },\n  addMessage(message) {\n    this.messages.unshift(message);\n    if (this.messages.length > 40) {\n      this.messages.pop();\n    }\n  },\n  logTaskUpdate(id, mode, task) {\n    let text = task && task.text ? ` (${task.text})` : '';\n    let message = `Task ${mode}: ${id} ${text}`;\n    this.addMessage(message);\n  },\n  logLinkUpdate(id, mode, link) {\n    let message = `Link ${mode}: ${id}`;\n    if (link) {\n      message += ` ( source: ${link.source}, target: ${link.target} )`;\n    }\n    this.addMessage(message);\n  }\n};","map":{"version":3,"names":["GanttConfig","axios","name","components","props","projectList","data","project","tasks","id","todo_title","member","start_date","end_date","duration","progress","messages","mounted","methods","fetchProjectTasks","projectNum","get","then","response","links","catch","error","console","addMessage","message","unshift","length","pop","logTaskUpdate","mode","task","text","logLinkUpdate","link","source","target"],"sources":["C:\\vue_everyware\\WBS\\src\\components\\GanttContainer.vue"],"sourcesContent":["<template>\r\n  <div class=\"g-container\">\r\n    <GanttConfig ref=\"GanttConfig\" class=\"left-container\" :tasks=\"tasks\"></GanttConfig>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GanttConfig from './GanttConfig.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'GanttContainer',\r\n  components: {GanttConfig},\r\n  props: {\r\n    // selectedProject: {\r\n    //   type: Object,      // 만약 selectedProject가 객체라면 type을 Object로 설정\r\n    //   default: () => ({})  // 기본값을 빈 객체로 설정. 필요에 따라 수정 가능\r\n    // }\r\n    projectList:[]\r\n  },\r\n  data () {\r\n    return {\r\n      project:'',\r\n      tasks: {\r\n        data: [\r\n          //{id: 1, todo_title: '메일', member: 'aaa', start_date: '2023-10-14', end_date: '2023-10-15',duration: 1, progress: 0.6},\r\n          {id: 2, todo_title: '전자결재함', member: 'bbb', start_date: '2023-10-15', end_date: '2023-10-18',duration: 3, progress: 0.4}\r\n        ],\r\n      },\r\n      messages: []\r\n    }\r\n  },\r\n  // watch: {\r\n  //   // selectedProject prop의 변경을 감지\r\n  //   selectedProject(newProject) {\r\n  //     if (newProject && newProject.project_num) {\r\n  //       this.fetchProjectTasks(newProject.project_num);\r\n  //     }\r\n  //   }\r\n  // },\r\n  mounted() {\r\n    // if (this.selectedProject && this.selectedProject.project_num) {\r\n    //   this.fetchProjectTasks(this.selectedProject.project_num);\r\n    // }\r\n  },\r\n\r\n  methods: {\r\n    fetchProjectTasks(projectNum) {\r\n      // 예: axios를 사용한 API 요청\r\n      axios.get(`/api/getTasksForProject?projectNum=${projectNum}`)\r\n        .then(response => {\r\n          this.tasks.data = response.data.tasks || [];\r\n          this.tasks.links = response.data.links || [];\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching tasks:\", error);\r\n        });\r\n    }\r\n  },\r\n    \r\n    \r\n    \r\n    \r\n    addMessage (message) {\r\n      this.messages.unshift(message)\r\n      if (this.messages.length > 40) {\r\n        this.messages.pop()\r\n      }\r\n    },\r\n\r\n    logTaskUpdate (id, mode, task) {\r\n      let text = (task && task.text ? ` (${task.text})`: '')\r\n      let message = `Task ${mode}: ${id} ${text}`\r\n      this.addMessage(message)\r\n    },\r\n\r\n    logLinkUpdate (id, mode, link) {\r\n      let message = `Link ${mode}: ${id}`\r\n      if (link) {\r\n        message += ` ( source: ${link.source}, target: ${link.target} )`\r\n      }\r\n      this.addMessage(message)\r\n    },\r\n   \r\n  }\r\n</script> \r\n\r\n\r\n<style>\r\n  html, body {\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .g-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .left-container {\r\n    overflow: hidden;\r\n    position: relative;\r\n    height: 100%;\r\n  }\r\n  .right-container {\r\n    border-right: 1px solid #cecece;\r\n    float: right;\r\n    height: 100%;\r\n    width: 340px;\r\n    box-shadow: 0 0 5px 2px #aaa;\r\n    position: relative;\r\n    z-index:2;\r\n  }\r\n  .gantt-messages {\r\n    list-style-type: none;\r\n    height: 50%;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    padding-left: 5px;\r\n  }\r\n  .gantt-messages > .gantt-message {\r\n    background-color: #f4f4f4;\r\n    box-shadow:inset 5px 0 #d69000;\r\n    font-family: Geneva, Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n    margin: 5px 0;\r\n    padding: 8px 0 8px 10px;\r\n  }\r\n\r\n  .gantt_grid {\r\n    overflow-y: hidden !important;\r\n}\r\n\r\n.gantt_task {\r\n    overflow-y: auto !important;\r\n}\r\n</style>"],"mappings":";AAOA,OAAOA,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IAACH;EAAW,CAAC;EACzBI,KAAK,EAAE;IACL;IACA;IACA;IACA;IACAC,WAAW,EAAC;EACd,CAAC;EACDC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,OAAO,EAAC,EAAE;MACVC,KAAK,EAAE;QACLF,IAAI,EAAE;QACJ;QACA;UAACG,EAAE,EAAE,CAAC;UAAEC,UAAU,EAAE,OAAO;UAAEC,MAAM,EAAE,KAAK;UAAEC,UAAU,EAAE,YAAY;UAAEC,QAAQ,EAAE,YAAY;UAACC,QAAQ,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAG;MAE3H,CAAC;MACDC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,OAAOA,CAAA,EAAG;IACR;IACA;IACA;EAAA,CACD;EAEDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,UAAU,EAAE;MAC5B;MACAnB,KAAK,CAACoB,GAAG,CAAE,sCAAqCD,UAAW,EAAC,EACzDE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACf,KAAK,CAACF,IAAG,GAAIiB,QAAQ,CAACjB,IAAI,CAACE,KAAI,IAAK,EAAE;QAC3C,IAAI,CAACA,KAAK,CAACgB,KAAI,GAAID,QAAQ,CAACjB,IAAI,CAACkB,KAAI,IAAK,EAAE;MAC9C,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF,CAAC;EAKCE,UAASA,CAAGC,OAAO,EAAE;IACnB,IAAI,CAACb,QAAQ,CAACc,OAAO,CAACD,OAAO;IAC7B,IAAI,IAAI,CAACb,QAAQ,CAACe,MAAK,GAAI,EAAE,EAAE;MAC7B,IAAI,CAACf,QAAQ,CAACgB,GAAG,CAAC;IACpB;EACF,CAAC;EAEDC,aAAYA,CAAGxB,EAAE,EAAEyB,IAAI,EAAEC,IAAI,EAAE;IAC7B,IAAIC,IAAG,GAAKD,IAAG,IAAKA,IAAI,CAACC,IAAG,GAAI,KAAKD,IAAI,CAACC,IAAK,GAAE,GAAE,EAAE;IACrD,IAAIP,OAAM,GAAK,QAAOK,IAAK,KAAIzB,EAAE,IAAI2B,IAAK;IAC1C,IAAI,CAACR,UAAU,CAACC,OAAO;EACzB,CAAC;EAEDQ,aAAYA,CAAG5B,EAAE,EAAEyB,IAAI,EAAEI,IAAI,EAAE;IAC7B,IAAIT,OAAM,GAAK,QAAOK,IAAK,KAAIzB,EAAG;IAClC,IAAI6B,IAAI,EAAE;MACRT,OAAM,IAAK,cAAcS,IAAI,CAACC,MAAO,aAAYD,IAAI,CAACE,MAAM,IAAG;IACjE;IACA,IAAI,CAACZ,UAAU,CAACC,OAAO;EACzB;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}