{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport FullCalendar from '@fullcalendar/vue3';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport axios from 'axios';\nimport CreateProjectModal from \"./CreateProjectModal.vue\";\nimport mixin from \"../mixin\";\nexport default {\n  mixins: [mixin],\n  components: {\n    FullCalendar,\n    CreateProjectModal\n  },\n  data() {\n    return {\n      showModal: false,\n      selectedProject: [],\n      // 선택된 프로젝트\n      projects: [],\n      // db에서 가져온 project list를 가공해서 저장할 배열\n      todos: [],\n      // db - todo list\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        },\n        initialView: 'dayGridMonth',\n        events: [],\n        // calendar에 뿌려줄 배열\n        editable: false,\n        // 일정 드래그 방지\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.handleEventClick,\n        eventsSet: this.setTodos\n      }\n    };\n  },\n  mounted() {},\n  methods: {\n    getTodo(value) {\n      this.key = value;\n    },\n    setTodos() {\n      console.log('selected Todo >>>>>>>', this.$store.state.todoList);\n      this.todos = this.$store.state.todoList;\n      this.calendarOptions.events = this.todos;\n    },\n    handleDateSelect(selectInfo) {\n      let title = prompt('일정 제목을 입력하세요');\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: selectInfo.id,\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    },\n    handleEventClick(clickInfo) {\n      if (confirm(`'${clickInfo.event.title}' 일정을 삭제하시겠습니까?`)) {\n        clickInfo.event.remove();\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    openModal() {\n      this.showModal = true;\n    },\n    handleProjectCreated(newProject) {\n      this.projects.push(newProject);\n    }\n  }\n};","map":{"version":3,"names":["FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","axios","CreateProjectModal","mixin","mixins","components","data","showModal","selectedProject","projects","todos","calendarOptions","plugins","headerToolbar","left","center","right","initialView","events","editable","selectable","selectMirror","dayMaxEvents","weekends","select","handleDateSelect","eventClick","handleEventClick","eventsSet","setTodos","mounted","methods","getTodo","value","key","console","log","$store","state","todoList","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","clickInfo","confirm","event","remove","closeModal","openModal","handleProjectCreated","newProject","push"],"sources":["C:\\vue_everyware\\WBS\\src\\components\\FullCalendar.vue"],"sourcesContent":["<script>\r\nimport FullCalendar from '@fullcalendar/vue3'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport axios from 'axios';\r\nimport CreateProjectModal from \"./CreateProjectModal.vue\";\r\nimport mixin from \"../mixin\";\r\n\r\nexport default {\r\n  mixins:[mixin],\r\n\r\n  components: {\r\n    FullCalendar,\r\n    CreateProjectModal,\r\n  },\r\n\r\n  data () {\r\n    return {      \r\n      showModal: false,\r\n      selectedProject: [], // 선택된 프로젝트\r\n      projects: [], // db에서 가져온 project list를 가공해서 저장할 배열\r\n      todos: [], // db - todo list\r\n      calendarOptions: {\r\n        plugins: [\r\n          dayGridPlugin,\r\n          timeGridPlugin,\r\n          interactionPlugin,\r\n          listPlugin\r\n        ],\r\n        headerToolbar: {\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n        },\r\n        initialView: 'dayGridMonth',\r\n        events: [], // calendar에 뿌려줄 배열\r\n        editable: false, // 일정 드래그 방지\r\n        selectable: true,\r\n        selectMirror: true,\r\n        dayMaxEvents: true,\r\n        weekends: true,\r\n        select: this.handleDateSelect,\r\n        eventClick: this.handleEventClick,\r\n        eventsSet: this.setTodos,\r\n      },\r\n    }\r\n  },\r\n\r\n  mounted() {},\r\n\r\n  methods: {\r\n    getTodo(value){\r\n      this.key = value;\r\n    },\r\n\r\n    setTodos() {\r\n      console.log('selected Todo >>>>>>>', this.$store.state.todoList)\r\n      this.todos = this.$store.state.todoList;\r\n      this.calendarOptions.events = this.todos;\r\n    },\r\n\r\n    handleDateSelect(selectInfo) {\r\n      let title = prompt('일정 제목을 입력하세요')\r\n      let calendarApi = selectInfo.view.calendar\r\n\r\n      calendarApi.unselect() // clear date selection\r\n      \r\n      if (title) {\r\n        calendarApi.addEvent({\r\n          id: selectInfo.id,\r\n          title,\r\n          start: selectInfo.startStr,\r\n          end: selectInfo.endStr,\r\n          allDay: selectInfo.allDay\r\n        })\r\n      }\r\n    },\r\n    handleEventClick(clickInfo) {\r\n      if (confirm(`'${clickInfo.event.title}' 일정을 삭제하시겠습니까?`)) {\r\n        clickInfo.event.remove()\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n    openModal() {\r\n      this.showModal = true;\r\n    },\r\n    handleProjectCreated(newProject) {\r\n      this.projects.push(newProject);\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class='app'>\r\n    <div class='app-main'>\r\n      <FullCalendar\r\n        class='app-calendar'\r\n        :options='calendarOptions'\r\n      >\r\n        <template v-slot:eventContent='arg'>\r\n          <b>{{ arg.timeText }}</b>\r\n          <span>{{ arg.event.title }}</span>\r\n        </template>\r\n      </FullCalendar>\r\n\r\n      <CreateProjectModal :visible=\"showModal\" \r\n      @close=\"closeModal\" @confirm=\"addTask\" \r\n      @projectCreated=\"handleProjectCreated\"\r\n      :projectData=\"selectedProject\"></CreateProjectModal>\r\n    </div> \r\n  </div>\r\n</template>\r\n\r\n<style>\r\n  @import '../css/calendar.css';\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}