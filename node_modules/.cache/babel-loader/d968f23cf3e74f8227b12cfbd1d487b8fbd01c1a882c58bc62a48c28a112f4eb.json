{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"g-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_GanttConfig = _resolveComponent(\"GanttConfig\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_GanttConfig, {\n    ref: \"GanttConfig\",\n    class: \"left-container\",\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"tasks\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_GanttConfig","ref","tasks","$data"],"sources":["C:\\vue_everyware\\WBS\\src\\components\\GanttContainer.vue"],"sourcesContent":["<template>\r\n  <div class=\"g-container\">\r\n    <GanttConfig ref=\"GanttConfig\" class=\"left-container\" :tasks=\"tasks\"></GanttConfig>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport GanttConfig from './GanttConfig.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'GanttContainer',\r\n  components: {GanttConfig},\r\n  props: {\r\n    // selectedProject: {\r\n    //   type: Object,      // 만약 selectedProject가 객체라면 type을 Object로 설정\r\n    //   default: () => ({})  // 기본값을 빈 객체로 설정. 필요에 따라 수정 가능\r\n    // }\r\n  },\r\n  data () {\r\n    return {\r\n      project:'',\r\n      tasks: {\r\n        data: [\r\n          //{id: 1, todo_title: '메일', member: 'aaa', start_date: '2023-10-14', end_date: '2023-10-15',duration: 1, progress: 0.6},\r\n          {id: 2, todo_title: '전자결재함', member: 'bbb', start_date: '2023-10-15', end_date: '2023-10-18',duration: 3, progress: 0.4}\r\n        ],\r\n      },\r\n      messages: []\r\n    }\r\n  },\r\n  // watch: {\r\n  //   // selectedProject prop의 변경을 감지\r\n  //   selectedProject(newProject) {\r\n  //     if (newProject && newProject.project_num) {\r\n  //       this.fetchProjectTasks(newProject.project_num);\r\n  //     }\r\n  //   }\r\n  // },\r\n  mounted() {\r\n    // if (this.selectedProject && this.selectedProject.project_num) {\r\n    //   this.fetchProjectTasks(this.selectedProject.project_num);\r\n    // }\r\n  },\r\n\r\n  methods: {\r\n    fetchProjectTasks(projectNum) {\r\n      // 예: axios를 사용한 API 요청\r\n      axios.get(`/api/getTasksForProject?projectNum=${projectNum}`)\r\n        .then(response => {\r\n          this.tasks.data = response.data.tasks || [];\r\n          this.tasks.links = response.data.links || [];\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching tasks:\", error);\r\n        });\r\n    }\r\n  },\r\n    \r\n    \r\n    \r\n    \r\n    addMessage (message) {\r\n      this.messages.unshift(message)\r\n      if (this.messages.length > 40) {\r\n        this.messages.pop()\r\n      }\r\n    },\r\n\r\n    logTaskUpdate (id, mode, task) {\r\n      let text = (task && task.text ? ` (${task.text})`: '')\r\n      let message = `Task ${mode}: ${id} ${text}`\r\n      this.addMessage(message)\r\n    },\r\n\r\n    logLinkUpdate (id, mode, link) {\r\n      let message = `Link ${mode}: ${id}`\r\n      if (link) {\r\n        message += ` ( source: ${link.source}, target: ${link.target} )`\r\n      }\r\n      this.addMessage(message)\r\n    },\r\n   \r\n  }\r\n</script> \r\n\r\n\r\n<style>\r\n  html, body {\r\n    height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  .g-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .left-container {\r\n    overflow: hidden;\r\n    position: relative;\r\n    height: 100%;\r\n  }\r\n  .right-container {\r\n    border-right: 1px solid #cecece;\r\n    float: right;\r\n    height: 100%;\r\n    width: 340px;\r\n    box-shadow: 0 0 5px 2px #aaa;\r\n    position: relative;\r\n    z-index:2;\r\n  }\r\n  .gantt-messages {\r\n    list-style-type: none;\r\n    height: 50%;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    padding-left: 5px;\r\n  }\r\n  .gantt-messages > .gantt-message {\r\n    background-color: #f4f4f4;\r\n    box-shadow:inset 5px 0 #d69000;\r\n    font-family: Geneva, Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n    margin: 5px 0;\r\n    padding: 8px 0 8px 10px;\r\n  }\r\n\r\n  .gantt_grid {\r\n    overflow-y: hidden !important;\r\n}\r\n\r\n.gantt_task {\r\n    overflow-y: auto !important;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;;uBAAxBC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAmFC,sBAAA;IAAtEC,GAAG,EAAC,aAAa;IAACL,KAAK,EAAC,gBAAgB;IAAEM,KAAK,EAAEC,KAAA,CAAAD"},"metadata":{},"sourceType":"module","externalDependencies":[]}