{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CreateProjectModal from \"./CreateProjectModal.vue\";\nimport axios from \"axios\";\nimport mixin from \"../mixin\";\nexport default {\n  name: 'SideBar',\n  mixins: [mixin],\n  components: {\n    CreateProjectModal\n  },\n  inject: [\"eventBus\"],\n  data() {\n    return {\n      projectList: [],\n      projectNum: null,\n      showModal: false,\n      showProjects: false\n    };\n  },\n  mounted() {\n    this.getProjectList();\n  },\n  methods: {\n    toggleProjects() {\n      this.showProjects = !this.showProjects;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    openModal() {\n      this.showModal = true;\n    },\n    handleProjectCreated(newProject) {\n      this.projects.push(newProject);\n    },\n    async getProjectList() {\n      try {\n        const response = await axios.get(\"http://localhost:8030/api/projectList?t_key=\" + this.key);\n        this.projectList = response.data;\n        console.log(\"Get Projcet List >>>>>>>>\", this.projectList);\n      } catch (error) {\n        console.log(\"Failed to Get Project List >>>>\", error);\n      }\n    },\n    selectProject(project) {\n      if (!this.projectNum || this.projectNum !== project.project_num) {\n        this.eventBus.emit('getTodoList', project);\n        this.projectNum = project.project_num;\n      }\n    }\n  }\n};","map":{"version":3,"names":["CreateProjectModal","axios","mixin","name","mixins","components","inject","data","projectList","projectNum","showModal","showProjects","mounted","getProjectList","methods","toggleProjects","closeModal","openModal","handleProjectCreated","newProject","projects","push","response","get","key","console","log","error","selectProject","project","project_num","eventBus","emit"],"sources":["C:\\vue_everyware\\WBS\\src\\components\\SideBar.vue"],"sourcesContent":["<template>\r\n  <aside>\r\n    <nav id=\"sideBar\">\r\n        <div class=\"create-project\">\r\n            <span>전체 프로젝트</span>\r\n            <img src=\"../assets/icon/add_btn.png\" @click=\"openModal\">\r\n            <CreateProjectModal :visible=\"showModal\" @close=\"closeModal\" @confirm=\"addTask\" @projectCreated=\"handleProjectCreated\"\r\n            :projectData=\"selectedProject\"></CreateProjectModal>\r\n        </div>\r\n          <div>\r\n            <div class=\"project-list\">\r\n              <span>목록보기</span>\r\n              <img v-if=\"!showProjects\" @click=\"toggleProjects\" src=\"../assets/icon/down.png\">\r\n              <img v-else @click=\"toggleProjects\" src=\"../assets/icon/up.png\">\r\n            </div>\r\n            <div>\r\n              <ul v-if=\"showProjects\">                                                                                                   \r\n              <li v-for=\"project in projectList\" :key=\"project.project_num\">\r\n                <span class=\"project-title\" @click=\"selectProject(project)\">{{ project.project_title }}</span>\r\n              </li>\r\n            </ul>\r\n            </div>\r\n          </div>\r\n    </nav>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\nimport CreateProjectModal from \"./CreateProjectModal.vue\";\r\nimport axios from \"axios\";\r\nimport mixin from \"../mixin\";\r\n\r\nexport default {\r\n  name: 'SideBar',\r\n  mixins:[mixin],\r\n  components:{CreateProjectModal},\r\n  inject: [\"eventBus\"],\r\n  data() {\r\n    return {\r\n      projectList: [],\r\n      projectNum: null,\r\n      showModal: false,\r\n      showProjects: false,\r\n    };\r\n  },\r\n  mounted(){\r\n    this.getProjectList();\r\n  },\r\n  methods: {\r\n    toggleProjects() {\r\n      this.showProjects = !this.showProjects;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n    openModal() {\r\n      this.showModal = true;\r\n    },\r\n    handleProjectCreated(newProject) {\r\n      this.projects.push(newProject);\r\n    },\r\n    async getProjectList(){\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8030/api/projectList?t_key=\"+this.key);\r\n        this.projectList = response.data;\r\n        console.log(\"Get Projcet List >>>>>>>>\", this.projectList)\r\n      } catch (error) {\r\n        console.log(\"Failed to Get Project List >>>>\", error);\r\n      }\r\n    },\r\n    selectProject(project) {\r\n      if (!this.projectNum || this.projectNum !== project.project_num) {\r\n        this.eventBus.emit('getTodoList', project);\r\n        this.projectNum = project.project_num\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"../assets/css/sidebar.css\");\r\n\r\n.project-title:hover{\r\n  cursor: pointer;\r\n}\r\n\r\n</style>\r\n"],"mappings":";AA4BA,OAAOA,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,KAAI,MAAO,UAAU;AAE5B,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,MAAM,EAAC,CAACF,KAAK,CAAC;EACdG,UAAU,EAAC;IAACL;EAAkB,CAAC;EAC/BM,MAAM,EAAE,CAAC,UAAU,CAAC;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACJ,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACDK,UAAUA,CAAA,EAAG;MACX,IAAI,CAACN,SAAQ,GAAI,KAAK;IACxB,CAAC;IACDO,SAASA,CAAA,EAAG;MACV,IAAI,CAACP,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDQ,oBAAoBA,CAACC,UAAU,EAAE;MAC/B,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,UAAU,CAAC;IAChC,CAAC;IACD,MAAMN,cAAcA,CAAA,EAAE;MACpB,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMrB,KAAK,CAACsB,GAAG,CAAC,8CAA8C,GAAC,IAAI,CAACC,GAAG,CAAC;QACzF,IAAI,CAAChB,WAAU,GAAIc,QAAQ,CAACf,IAAI;QAChCkB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAClB,WAAW;MAC3D,EAAE,OAAOmB,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEC,KAAK,CAAC;MACvD;IACF,CAAC;IACDC,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAAC,IAAI,CAACpB,UAAS,IAAK,IAAI,CAACA,UAAS,KAAMoB,OAAO,CAACC,WAAW,EAAE;QAC/D,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,aAAa,EAAEH,OAAO,CAAC;QAC1C,IAAI,CAACpB,UAAS,GAAIoB,OAAO,CAACC,WAAU;MACtC;IACF;EAEF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}