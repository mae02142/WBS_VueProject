{"ast":null,"code":"import FullCalendar from '@fullcalendar/vue3';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport CreateProjectModal from \"./CreateProjectModal.vue\";\nimport mixin from \"../mixin\";\nexport default {\n  mixins: [mixin],\n  components: {\n    FullCalendar,\n    CreateProjectModal\n  },\n  props: {\n    todoList: []\n  },\n  data() {\n    return {\n      // todoList: [], // db - todo list\n      //localTodoList: {...this.todoList},\n      showModal: false,\n      isShow: true,\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],\n        headerToolbar: {\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        },\n        initialView: 'dayGridMonth',\n        events: [],\n        // calendar에 뿌려줄 배열\n        editable: false,\n        // 일정 드래그 방지\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.handleEventClick,\n        eventsSet: this.setTodoList\n      }\n    };\n  },\n  mounted() {},\n  // watch: {\n  //   todoList: function (newData) { // oldData\n  //     console.log('changed');\n  //     this.calendarOptions.events = newData;\n  //       }\n  // },\n  methods: {\n    setTodoList() {\n      console.log('Calendar Todo >>>>>>>', this.todoList);\n      // this.calendarOptions.events = [];\n      // this.calendarOptions.events = this.todoList;\n    },\n\n    handleDateSelect(selectInfo) {\n      let title = prompt('일정 제목을 입력하세요');\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: selectInfo.id,\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    },\n    handleEventClick(clickInfo) {\n      if (confirm(`'${clickInfo.event.title}' 일정을 삭제하시겠습니까?`)) {\n        clickInfo.event.remove();\n      }\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    openModal() {\n      this.showModal = true;\n    },\n    test() {\n      document.test = this.$refs.cal;\n      console.log(this.$refs.cal);\n      this.isShow = !this.isShow;\n      //console.log(this.$refs.cal.getEventList());\n      this.calendarOptions.event = this.todoList;\n    }\n  }\n};","map":{"version":3,"names":["FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","CreateProjectModal","mixin","mixins","components","props","todoList","data","showModal","isShow","calendarOptions","plugins","headerToolbar","left","center","right","initialView","events","editable","selectable","selectMirror","dayMaxEvents","weekends","select","handleDateSelect","eventClick","handleEventClick","eventsSet","setTodoList","mounted","methods","console","log","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","clickInfo","confirm","event","remove","closeModal","openModal","test","document","$refs","cal"],"sources":["C:\\vue_everyware\\WBS\\src\\components\\FullCalendar.vue"],"sourcesContent":["<script>\r\nimport FullCalendar from '@fullcalendar/vue3'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport CreateProjectModal from \"./CreateProjectModal.vue\";\r\nimport mixin from \"../mixin\";\r\n\r\nexport default {\r\n  mixins:[mixin],\r\n  components: {\r\n    FullCalendar,\r\n    CreateProjectModal,\r\n  },\r\n  props: {\r\n    todoList: [],\r\n  },\r\n  data () {\r\n    return {      \r\n      // todoList: [], // db - todo list\r\n      //localTodoList: {...this.todoList},\r\n      showModal: false,\r\n      isShow: true,\r\n      calendarOptions: {\r\n        plugins: [\r\n          dayGridPlugin,\r\n          timeGridPlugin,\r\n          interactionPlugin,\r\n          listPlugin\r\n        ],\r\n        headerToolbar: {\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n        },\r\n        initialView: 'dayGridMonth',\r\n        events: [], // calendar에 뿌려줄 배열\r\n        editable: false, // 일정 드래그 방지\r\n        selectable: true,\r\n        selectMirror: true,\r\n        dayMaxEvents: true,\r\n        weekends: true,\r\n        select: this.handleDateSelect,\r\n        eventClick: this.handleEventClick,\r\n        eventsSet: this.setTodoList\r\n      },\r\n    }\r\n  },\r\n  mounted() {},\r\n  // watch: {\r\n  //   todoList: function (newData) { // oldData\r\n  //     console.log('changed');\r\n  //     this.calendarOptions.events = newData;\r\n  //       }\r\n  // },\r\n  methods: {\r\n    setTodoList() {\r\n      console.log('Calendar Todo >>>>>>>', this.todoList)\r\n      // this.calendarOptions.events = [];\r\n      // this.calendarOptions.events = this.todoList;\r\n    },\r\n\r\n    handleDateSelect(selectInfo) {\r\n      let title = prompt('일정 제목을 입력하세요')\r\n      let calendarApi = selectInfo.view.calendar\r\n\r\n      calendarApi.unselect() // clear date selection\r\n      \r\n      if (title) {\r\n        calendarApi.addEvent({\r\n          id: selectInfo.id,\r\n          title,\r\n          start: selectInfo.startStr,\r\n          end: selectInfo.endStr,\r\n          allDay: selectInfo.allDay\r\n        })\r\n      }\r\n    },\r\n    handleEventClick(clickInfo) {\r\n      if (confirm(`'${clickInfo.event.title}' 일정을 삭제하시겠습니까?`)) {\r\n        clickInfo.event.remove()\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n    openModal() {\r\n      this.showModal = true;\r\n    },\r\n    test(){\r\n      document.test = this.$refs.cal;\r\n      console.log(this.$refs.cal);\r\n      this.isShow = !this.isShow;\r\n      //console.log(this.$refs.cal.getEventList());\r\n      this.calendarOptions.event = this.todoList;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class='app'>\r\n    <div class='app-main'>\r\n      <button @click=\"test\">test</button>\r\n      <FullCalendar\r\n        v-if=\"isShow\"\r\n        class='app-calendar'\r\n        :options='calendarOptions'\r\n        ref=\"cal\"\r\n      >\r\n        <template v-slot:eventContent='arg'>\r\n          <b>{{ arg.timeText }}</b>\r\n          <span>{{ arg.event.title }}</span>\r\n        </template>\r\n      </FullCalendar>\r\n\r\n      <CreateProjectModal :visible=\"showModal\" \r\n      @close=\"closeModal\" @confirm=\"addTask\" \r\n      @projectCreated=\"handleProjectCreated\"\r\n      :projectData=\"selectedProject\"></CreateProjectModal>\r\n    </div> \r\n  </div>\r\n</template>\r\n\r\n<style>\r\n  @import '../assets/css/calendar.css';\r\n</style>"],"mappings":"AACA,OAAOA,YAAW,MAAO,oBAAmB;AAC5C,OAAOC,aAAY,MAAO,uBAAsB;AAChD,OAAOC,cAAa,MAAO,wBAAuB;AAClD,OAAOC,iBAAgB,MAAO,2BAA0B;AACxD,OAAOC,UAAS,MAAO,oBAAmB;AAC1C,OAAOC,kBAAiB,MAAO,0BAA0B;AACzD,OAAOC,KAAI,MAAO,UAAU;AAE5B,eAAe;EACbC,MAAM,EAAC,CAACD,KAAK,CAAC;EACdE,UAAU,EAAE;IACVR,YAAY;IACZK;EACF,CAAC;EACDI,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ,CAAC;EACDC,IAAGA,CAAA,EAAK;IACN,OAAO;MACL;MACA;MACAC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE,IAAI;MACZC,eAAe,EAAE;QACfC,OAAO,EAAE,CACPd,aAAa,EACbC,cAAc,EACdC,iBAAiB,EACjBC,UAAS,CACV;QACDY,aAAa,EAAE;UACbC,IAAI,EAAE,iBAAiB;UACvBC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE;QACT,CAAC;QACDC,WAAW,EAAE,cAAc;QAC3BC,MAAM,EAAE,EAAE;QAAE;QACZC,QAAQ,EAAE,KAAK;QAAE;QACjBC,UAAU,EAAE,IAAI;QAChBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE,IAAI,CAACC,gBAAgB;QAC7BC,UAAU,EAAE,IAAI,CAACC,gBAAgB;QACjCC,SAAS,EAAE,IAAI,CAACC;MAClB;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG,CAAC,CAAC;EACZ;EACA;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE;IACPF,WAAWA,CAAA,EAAG;MACZG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC1B,QAAQ;MAClD;MACA;IACF,CAAC;;IAEDkB,gBAAgBA,CAACS,UAAU,EAAE;MAC3B,IAAIC,KAAI,GAAIC,MAAM,CAAC,cAAc;MACjC,IAAIC,WAAU,GAAIH,UAAU,CAACI,IAAI,CAACC,QAAO;MAEzCF,WAAW,CAACG,QAAQ,CAAC,GAAE;;MAEvB,IAAIL,KAAK,EAAE;QACTE,WAAW,CAACI,QAAQ,CAAC;UACnBC,EAAE,EAAER,UAAU,CAACQ,EAAE;UACjBP,KAAK;UACLQ,KAAK,EAAET,UAAU,CAACU,QAAQ;UAC1BC,GAAG,EAAEX,UAAU,CAACY,MAAM;UACtBC,MAAM,EAAEb,UAAU,CAACa;QACrB,CAAC;MACH;IACF,CAAC;IACDpB,gBAAgBA,CAACqB,SAAS,EAAE;MAC1B,IAAIC,OAAO,CAAE,IAAGD,SAAS,CAACE,KAAK,CAACf,KAAM,iBAAgB,CAAC,EAAE;QACvDa,SAAS,CAACE,KAAK,CAACC,MAAM,CAAC;MACzB;IACF,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC3C,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD4C,SAASA,CAAA,EAAG;MACV,IAAI,CAAC5C,SAAQ,GAAI,IAAI;IACvB,CAAC;IACD6C,IAAIA,CAAA,EAAE;MACJC,QAAQ,CAACD,IAAG,GAAI,IAAI,CAACE,KAAK,CAACC,GAAG;MAC9BzB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACuB,KAAK,CAACC,GAAG,CAAC;MAC3B,IAAI,CAAC/C,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;MAC1B;MACA,IAAI,CAACC,eAAe,CAACuC,KAAI,GAAI,IAAI,CAAC3C,QAAQ;IAC5C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}