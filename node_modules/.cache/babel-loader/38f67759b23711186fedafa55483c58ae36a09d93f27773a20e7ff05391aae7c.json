{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tl-container\"\n};\nconst _hoisted_2 = {\n  class: \"tab\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SideBar = _resolveComponent(\"SideBar\");\n  const _component_GanttContainer = _resolveComponent(\"GanttContainer\");\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_SideBar, {\n    onProjectSelected: _ctx.handleProjectSelected\n  }, null, 8 /* PROPS */, [\"onProjectSelected\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.toggleView())\n  }, \"타임라인\"), _createElementVNode(\"span\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.toggleView())\n  }, \"캘린더\"), $data.isTimeLine ? (_openBlock(), _createBlock(_component_GanttContainer, {\n    key: 0,\n    todoList: $data.todoTimeLine\n  }, null, 8 /* PROPS */, [\"todoList\"])) : _createCommentVNode(\"v-if\", true), $data.isCalendar ? (_openBlock(), _createBlock(_component_FullCalendar, {\n    key: 1,\n    todoList: $data.todoCalendar\n  }, null, 8 /* PROPS */, [\"todoList\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_SideBar","onProjectSelected","_ctx","handleProjectSelected","_createElementVNode","_hoisted_2","onClick","_cache","$event","$options","toggleView","$data","isTimeLine","_createBlock","_component_GanttContainer","todoList","todoTimeLine","isCalendar","_component_FullCalendar","todoCalendar"],"sources":["C:\\vue_everyware\\WBS\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"tl-container\">\r\n    <SideBar @projectSelected=\"handleProjectSelected\"></SideBar>\r\n    <div class=\"tab\">\r\n      <span @click=\"toggleView()\">타임라인</span>\r\n      <span @click=\"toggleView()\">캘린더</span>\r\n      <GanttContainer v-if=\"isTimeLine\"\r\n        :todoList=\"todoTimeLine\">\r\n      </GanttContainer>\r\n      <FullCalendar v-if=\"isCalendar\"\r\n        :todoList=\"todoCalendar\">\r\n      </FullCalendar>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SideBar from './components/SideBar';\r\nimport GanttContainer from \"./components/GanttContainer.vue\";\r\nimport FullCalendar from \"./components/FullCalendar.vue\";\r\nimport axios from \"axios\";\r\nimport mixin from \"./mixin\";\r\n\r\nexport default {\r\n  components: { SideBar, GanttContainer, FullCalendar},\r\n  inject: [\"eventBus\"],\r\n  mixins:[mixin],\r\n  data() {\r\n    return {\r\n      todoList: [],\r\n      todoCalendar: [],\r\n      todoTimeLine: [],\r\n      isTimeLine: true,\r\n      isCalendar: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.eventBus.on('getTodoList',(project)=>{\r\n      this.getTodoList(project);\r\n    })\r\n  },\r\n  beforeUnmount() {\r\n    this.eventBus.off('getTodoList');\r\n  },\r\n  methods: {\r\n    getTodoList(project) {\r\n      this.initializeArray();\r\n      axios.post(\"http://localhost:8030/api/getAllTodoList\", {\r\n        project_num: project.project_num,\r\n        t_key: this.key\r\n      })\r\n      .then(response => {\r\n        this.todoList = response.data;\r\n        console.log(\"Get Todo data >>>>\", this.todoList);\r\n        this.todoListforCal();\r\n      })\r\n      .catch (error => {\r\n        console.log(\"Failed to Get Todo List >>>>\", error);\r\n      })\r\n    }, // getTodoList()\r\n    initializeArray() {\r\n      this.todoList = []\r\n      console.log(\"initializeArray >>\", this.todoList)\r\n    },\r\n    todoListforCal() {\r\n      var dataList = this.todoList;\r\n      \r\n      dataList.map((element) => {\r\n        const startDate = new Date(element.start_date);\r\n        startDate.setHours(0, 0, 0, 0);\r\n        const endDate = new Date(element.due_date);\r\n        endDate.setHours(0, 0, 0, 0);\r\n        startDate.setDate(startDate.getDate() + 1);\r\n        endDate.setDate(endDate.getDate() + 1);\r\n\r\n        this.todoCalendar.push({\r\n          id: element.todo_num,\r\n          title: element.todo_title,\r\n          start: startDate.toISOString().split('T')[0],\r\n          end: endDate.toISOString().split('T')[0],\r\n          member_name: element.member_name,\r\n          content: element.content,\r\n          member_num: element.member_num \r\n        })\r\n      })\r\n      console.log(\"todo Calendar >>>>\", this.todoCalendar);\r\n      this.eventBus.emit('resetCalendar',this.todoCalendar);\r\n    },\r\n    todoListforTL() {\r\n\r\n    },\r\n    toggleView() { // toggle for category\r\n      this.isTimeLine = !this.isTimeLine;\r\n      this.isCalendar = !this.isCalendar;\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n.tl-container{\r\n  margin-top:88px;\r\n}\r\n\r\n\r\n\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAK;;;;;uBAFlBC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,YAAA,CAA4DC,kBAAA;IAAlDC,iBAAe,EAAEC,IAAA,CAAAC;EAAqB,gDAChDC,mBAAA,CASM,OATNC,UASM,GARJD,mBAAA,CAAuC;IAAhCE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;KAAI,MAAI,GAChCN,mBAAA,CAAsC;IAA/BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU;KAAI,KAAG,GACTC,KAAA,CAAAC,UAAU,I,cAAhCC,YAAA,CAEiBC,yBAAA;;IADdC,QAAQ,EAAEJ,KAAA,CAAAK;8EAEOL,KAAA,CAAAM,UAAU,I,cAA9BJ,YAAA,CAEeK,uBAAA;;IADZH,QAAQ,EAAEJ,KAAA,CAAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}