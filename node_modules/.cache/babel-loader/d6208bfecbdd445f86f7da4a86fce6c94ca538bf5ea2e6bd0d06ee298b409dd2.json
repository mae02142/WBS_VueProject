{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport mixin from \"../mixin\";\nexport default {\n  name: \"MemberSearchModal\",\n  mixins: [mixin],\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    sendMemberName: {\n      type: Array\n      //default: () => []\n    }\n  },\n\n  data() {\n    return {\n      searchValue: '',\n      selectedCondition: 'all',\n      // 기본값을 'all'로 설정\n      searchOptions: [{\n        value: 'all',\n        text: '전체'\n      }, {\n        value: 'div_name',\n        text: '부서'\n      }, {\n        value: 'member_name',\n        text: '이름'\n      }],\n      members: [],\n      selectedMembers: []\n    };\n  },\n  watch: {\n    sendMemberName: {\n      handler(newVal) {\n        if (Array.isArray(newVal)) {\n          this.selectedMembers = newVal;\n        } else {\n          // newVal이 배열이 아닌 경우 기본값으로 설정\n          this.selectedMembers = [];\n        }\n      },\n      immediate: true\n    },\n    visible(newVal) {\n      if (newVal) {\n        this.searchAllMember();\n      }\n    }\n  },\n  methods: {\n    forTest(temp) {\n      console.log(\"key : \" + temp);\n      this.key = temp;\n      this.searchAllMember();\n    },\n    async searchAllMember() {\n      try {\n        const response = await axios.get(\"http://localhost:8030/api/searchAllMember?t_key=\" + this.key);\n        this.members = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    addMember(member) {\n      // 선택된 member가 이미 selectedMembers에 있는지 확인\n      const exists = this.selectedMembers.find(m => m.member_num === member.member_num);\n      if (exists) {\n        // 이미 있으면 배열에서 제거\n        this.selectedMembers = this.selectedMembers.filter(m => m.member_num !== member.member_num);\n      } else {\n        // 없으면 배열에 추가\n        this.selectedMembers.push(member);\n      }\n    },\n    //조건으로 검색\n    async searchMember() {\n      try {\n        const payload = {\n          t_key: this.key,\n          searchCondition: this.selectedCondition,\n          searchValue: this.searchValue\n        };\n        const response = await axios.post(\"http://localhost:8030/api/searchMember\", payload);\n        console.log(response.data);\n        this.members = [];\n        this.members = response.data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    //프로젝트 참여 멤버 선택하고 confirm\n    confirmMember() {\n      this.$emit('update-selected-members', this.selectedMembers);\n      this.$emit('close');\n    },\n    closeModal() {\n      this.selectedMembers = [];\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"names":["axios","mixin","name","mixins","props","visible","type","Boolean","default","sendMemberName","Array","data","searchValue","selectedCondition","searchOptions","value","text","members","selectedMembers","watch","handler","newVal","isArray","immediate","searchAllMember","methods","forTest","temp","console","log","key","response","get","error","addMember","member","exists","find","m","member_num","filter","push","searchMember","payload","t_key","searchCondition","post","confirmMember","$emit","closeModal"],"sources":["C:\\vue_everyware\\WBS\\src\\components\\MemberSearchModal.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"visible\" class=\"app-t-modal\">\r\n    <div class=\"app-modal-content\">\r\n      <div class=\"app-modal-header\">Search Member</div>\r\n      <div class=\"app-modal-body\">\r\n        <div class=\"a-m-search\">\r\n          <select class=\"m-s-select\" id=\"s-condition\" name=\"searchCondition\" v-model=\"selectedCondition\" style=\"text-align:left; width:80px;\">\r\n            <option v-for=\"option in searchOptions\" :key=\"option.value\" :value=\"option.value\">\r\n            {{ option.text }}\r\n            </option>\r\n\t\t\t\t\t</select>\r\n          <input class=\"s-selForm\" v-model=\"searchValue\" @keyup.enter=\"searchMember()\" placeholder=\"부서/사원명만 검색 가능\"/>\r\n          <button class=\"m-i-search\" @click=\"searchMember\">Search</button>\r\n        </div>\r\n        <div class=\"a-m-list\">\r\n          <table class=\"m-s-list-table\">\r\n            <tr v-for=\"(member, index) in members\" :key=\"index\" @click=\"addMember(member)\">\r\n              <td>{{ member.div_name }}</td>\r\n              <td>{{ member.member_name }}</td>\r\n              <td>{{ member.rank }}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div class=\"s-list-div\">\r\n          <div v-for=\"member in selectedMembers\" :key=\"member.member_num\"  @click=\"addMember(member)\">\r\n              {{ member.div_name }} {{ member.member_name }} {{ member.rank }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"app-modal-footer\">\r\n        <button class=\"m-confirm-btn\" @click=\"confirmMember\">Confirm</button>\r\n        <button class=\"m-cancel-btn\" @click=\"closeModal\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport mixin from \"../mixin\";\r\nexport default {\r\n  name:\"MemberSearchModal\",\r\n  mixins:[mixin],\r\n  props: {\r\n      visible: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      sendMemberName: {\r\n      type: Array,\r\n      //default: () => []\r\n    }\r\n    },\r\n  data() {\r\n    return {\r\n      searchValue: '',\r\n      selectedCondition: 'all',  // 기본값을 'all'로 설정\r\n      searchOptions: [\r\n        { value: 'all', text: '전체' },\r\n        { value: 'div_name', text: '부서' },\r\n        { value: 'member_name', text: '이름' },\r\n      ],\r\n    \r\n      members: [],\r\n      selectedMembers: [],\r\n    };\r\n  },\r\n  watch: {\r\n  sendMemberName: {\r\n    handler(newVal) {\r\n\r\n      if (Array.isArray(newVal)) {\r\n        this.selectedMembers = newVal;\r\n      } else {\r\n        // newVal이 배열이 아닌 경우 기본값으로 설정\r\n        this.selectedMembers = [];\r\n      }\r\n    },\r\n    immediate: true\r\n  },\r\n  visible(newVal){\r\n    if(newVal){\r\n      this.searchAllMember();\r\n    }\r\n  }\r\n},\r\n  methods: {\r\n    forTest(temp){\r\n      console.log(\"key : \" + temp);\r\n      this.key = temp;\r\n      this.searchAllMember();\r\n    },\r\n    async searchAllMember(){\r\n        try {\r\n        const response = await axios.get(\"http://localhost:8030/api/searchAllMember?t_key=\"+this.key);\r\n        this.members = response.data;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    addMember(member) {\r\n    // 선택된 member가 이미 selectedMembers에 있는지 확인\r\n    const exists = this.selectedMembers.find(m => m.member_num === member.member_num);\r\n\r\n    if (exists) {\r\n      // 이미 있으면 배열에서 제거\r\n      this.selectedMembers = this.selectedMembers.filter(m => m.member_num !== member.member_num);\r\n    } else {\r\n      // 없으면 배열에 추가\r\n      this.selectedMembers.push(member);\r\n    }\r\n  },\r\n  //조건으로 검색\r\n  async searchMember() {\r\n    try {\r\n      const payload = {\r\n        t_key : this.key,\r\n        searchCondition: this.selectedCondition,\r\n        searchValue: this.searchValue\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:8030/api/searchMember\",payload);\r\n      console.log(response.data);\r\n      this.members = [];\r\n      this.members = response.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n  //프로젝트 참여 멤버 선택하고 confirm\r\n  confirmMember() {\r\n    this.$emit('update-selected-members', this.selectedMembers);\r\n    this.$emit('close');\r\n  },\r\n\r\n    closeModal() {\r\n      this.selectedMembers=[];\r\n      this.$emit('close');\r\n    },\r\n  } \r\n};\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.app-t-modal {\r\n  position: fixed;\r\n  z-index: 1000;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.app-modal-content {\r\n  width: 300px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.app-modal-header,\r\n.app-modal-footer {\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.a-m-search {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 15px;\r\n  gap: 5px;\r\n}\r\n\r\n.s-selForm {\r\n  flex-grow: 1;\r\n}\r\n\r\n.m-i-search {\r\n  padding: 8px 10px;\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.a-m-list {\r\n  overflow-y: auto;\r\n  height: 150px;\r\n  border: 1px solid #ccc;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.m-s-list-table {\r\n  width: 60%;\r\n  border-collapse: collapse;\r\n  margin-left: 55px;\r\n}\r\n.m-s-list-table td{\r\n  padding: 0px;\r\n}\r\n\r\n.m-s-list-table tr:hover {\r\n  background-color: rgba(117, 144, 194, 0.25);\r\n  cursor: pointer;\r\n}\r\n\r\n.s-list-div {\r\n  margin-top: 15px;\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n  height: 90px;\r\n}\r\n.s-list-div div:hover{\r\n  cursor: pointer;\r\n}\r\n\r\n.m-confirm-btn,\r\n.m-cancel-btn {\r\n  padding: 8px 16px;\r\n  margin: 5px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.m-confirm-btn {\r\n  background-color: #007BFF;\r\n  color: #fff;\r\n}\r\n\r\n.m-cancel-btn {\r\n  background-color: #ccc;\r\n}\r\n\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}