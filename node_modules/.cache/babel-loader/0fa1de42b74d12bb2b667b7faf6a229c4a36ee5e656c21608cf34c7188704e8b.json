{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"app-main\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\", true);\n  const _component_CreateProjectModal = _resolveComponent(\"CreateProjectModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.test && $options.test(...args))\n  }, \"test\"), $data.isShow ? (_openBlock(), _createBlock(_component_FullCalendar, {\n    key: 0,\n    class: \"app-calendar\",\n    options: $data.calendarOptions,\n    ref: \"cal\"\n  }, {\n    eventContent: _withCtx(arg => [_createElementVNode(\"b\", null, _toDisplayString(arg.timeText), 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(arg.event.title), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"options\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_CreateProjectModal, {\n    visible: $data.showModal,\n    onClose: $options.closeModal,\n    onConfirm: _ctx.addTask,\n    onProjectCreated: _ctx.handleProjectCreated,\n    projectData: _ctx.selectedProject\n  }, null, 8 /* PROPS */, [\"visible\", \"onClose\", \"onConfirm\", \"onProjectCreated\", \"projectData\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","test","$data","isShow","_createBlock","_component_FullCalendar","options","calendarOptions","ref","eventContent","_withCtx","arg","_toDisplayString","timeText","event","title","_createVNode","_component_CreateProjectModal","visible","showModal","onClose","closeModal","onConfirm","_ctx","addTask","onProjectCreated","handleProjectCreated","projectData","selectedProject"],"sources":["C:\\vue_everyware\\WBS\\src\\components\\FullCalendar.vue"],"sourcesContent":["<script>\r\nimport FullCalendar from '@fullcalendar/vue3'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport CreateProjectModal from \"./CreateProjectModal.vue\";\r\nimport mixin from \"../mixin\";\r\n\r\nexport default {\r\n  mixins:[mixin],\r\n  components: {\r\n    FullCalendar,\r\n    CreateProjectModal,\r\n  },\r\n  inject: [\"eventBus\"],\r\n  props: {\r\n    todoList: [],\r\n  },\r\n  data () {\r\n    return {      \r\n      // todoList: [], // db - todo list\r\n      //localTodoList: {...this.todoList},\r\n      showModal: false,\r\n      isShow: true,\r\n      calendarOptions: {\r\n        plugins: [\r\n          dayGridPlugin,\r\n          timeGridPlugin,\r\n          interactionPlugin,\r\n          listPlugin\r\n        ],\r\n        headerToolbar: {\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\r\n        },\r\n        initialView: 'dayGridMonth',\r\n        events: this.todoList, // calendar에 뿌려줄 배열\r\n        editable: false, // 일정 드래그 방지\r\n        selectable: true,\r\n        selectMirror: true,\r\n        dayMaxEvents: true,\r\n        weekends: true,\r\n        select: this.handleDateSelect,\r\n        eventClick: this.handleEventClick,\r\n        eventsSet: this.setTodoList\r\n      },\r\n    }\r\n  },\r\n  mounted() {\r\n    document.test = this.$refs.cal;\r\n    this.eventBus.on('resetCalendar',this.test);\r\n  },\r\n  // watch: {\r\n  //   todoList: function (newData) { // oldData\r\n  //     console.log('changed');\r\n  //     this.calendarOptions.events = newData;\r\n  //       }\r\n  // },\r\n  methods: {\r\n    setTodoList() {\r\n      console.log('Calendar Todo >>>>>>>', this.todoList)\r\n      // this.calendarOptions.events = [];\r\n      // this.calendarOptions.events = this.todoList;\r\n    },\r\n\r\n    handleDateSelect(selectInfo) {\r\n      let title = prompt('일정 제목을 입력하세요')\r\n      let calendarApi = selectInfo.view.calendar\r\n\r\n      calendarApi.unselect() // clear date selection\r\n      \r\n      if (title) {\r\n        calendarApi.addEvent({\r\n          id: selectInfo.id,\r\n          title,\r\n          start: selectInfo.startStr,\r\n          end: selectInfo.endStr,\r\n          allDay: selectInfo.allDay\r\n        })\r\n      }\r\n    },\r\n    handleEventClick(clickInfo) {\r\n      if (confirm(`'${clickInfo.event.title}' 일정을 삭제하시겠습니까?`)) {\r\n        clickInfo.event.remove()\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n    openModal() {\r\n      this.showModal = true;\r\n    },\r\n    test(value){\r\n      document.test = this.$refs.cal;\r\n      console.log(this.$refs.cal);\r\n      \r\n      this.$refs.cal.getApi().pauseRendering();\r\n      this.$refs.cal.getApi().destroy();\r\n      this.calendarOptions.events = value;\r\n      console.log(this.calendarOptions);\r\n      this.$refs.cal.buildOptions(this.calendarOptions);\r\n      this.$refs.cal.getApi().render();\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class='app'>\r\n    <div class='app-main'>\r\n      <button @click=\"test\">test</button>\r\n      <FullCalendar\r\n        v-if=\"isShow\"\r\n        class='app-calendar'\r\n        :options='calendarOptions'\r\n        ref=\"cal\"\r\n      >\r\n        <template v-slot:eventContent='arg'>\r\n          <b>{{ arg.timeText }}</b>\r\n          <span>{{ arg.event.title }}</span>\r\n        </template>\r\n      </FullCalendar>\r\n\r\n      <CreateProjectModal :visible=\"showModal\" \r\n      @close=\"closeModal\" @confirm=\"addTask\" \r\n      @projectCreated=\"handleProjectCreated\"\r\n      :projectData=\"selectedProject\"></CreateProjectModal>\r\n    </div> \r\n  </div>\r\n</template>\r\n\r\n<style>\r\n  @import '../assets/css/calendar.css';\r\n</style>"],"mappings":";;EA8GOA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAU;;;;uBADvBC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJD,mBAAA,CAAmC;IAA1BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAC,IAAA,IAAAF,IAAA,CAAI;KAAE,MAAI,GAElBG,KAAA,CAAAC,MAAM,I,cADdC,YAAA,CAUeC,uBAAA;;IARbb,KAAK,EAAC,cAAc;IACnBc,OAAO,EAAEJ,KAAA,CAAAK,eAAe;IACzBC,GAAG,EAAC;;IAEaC,YAAY,EAAAC,QAAA,CAAEC,GAAG,KAChChB,mBAAA,CAAyB,WAAAiB,gBAAA,CAAnBD,GAAG,CAACE,QAAQ,kBAClBlB,mBAAA,CAAkC,cAAAiB,gBAAA,CAAzBD,GAAG,CAACG,KAAK,CAACC,KAAK,iB;;;uEAI5BC,YAAA,CAGoDC,6BAAA;IAH/BC,OAAO,EAAEhB,KAAA,CAAAiB,SAAS;IACtCC,OAAK,EAAEpB,QAAA,CAAAqB,UAAU;IAAGC,SAAO,EAAEC,IAAA,CAAAC,OAAO;IACpCC,gBAAc,EAAEF,IAAA,CAAAG,oBAAoB;IACpCC,WAAW,EAAEJ,IAAA,CAAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}